#!/usr/bin/env python3
"""
–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫ Message Treaker
–ó–∞–ø—É—Å–∫–∞–µ—Ç API —Å–µ—Ä–≤–µ—Ä, –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å
"""

import subprocess
import time
import webbrowser
import requests
import sys
import os
from pathlib import Path

class MessageTreakerLauncher:
    def __init__(self):
        self.api_process = None
        self.api_url = "http://127.0.0.1:8000"
        self.web_file = Path(__file__).parent / "web" / "index.html"
        
    def check_dependencies(self):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"""
        print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
        if not os.path.exists("venv"):
            print("‚ùå –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!")
            print("üí° –°–æ–∑–¥–∞–π—Ç–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ: python3 -m venv venv")
            return False
            
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º .env —Ñ–∞–π–ª
        if not os.path.exists(".env"):
            print("‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            print("üí° –°–∫–æ–ø–∏—Ä—É–π—Ç–µ env.example –≤ .env –∏ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ API –∫–ª—é—á–∏")
            return False
            
        print("‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –≤ –ø–æ—Ä—è–¥–∫–µ")
        return True
    
    def wait_for_api(self, timeout=30):
        """–û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ API"""
        print("‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ API —Å–µ—Ä–≤–µ—Ä–∞...")
        
        for i in range(timeout):
            try:
                response = requests.get(f"{self.api_url}/health", timeout=2)
                if response.status_code == 200:
                    print("‚úÖ API —Å–µ—Ä–≤–µ—Ä –≥–æ—Ç–æ–≤!")
                    return True
            except requests.exceptions.RequestException:
                pass
            
            time.sleep(1)
            if i % 5 == 0 and i > 0:
                print(f"‚è≥ –ñ–¥–µ–º... ({i}/{timeout}s)")
        
        print("‚ùå API —Å–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç –≤ —Ç–µ—á–µ–Ω–∏–µ 30 —Å–µ–∫—É–Ω–¥")
        return False
    
    def start_api_server(self):
        """–ó–∞–ø—É—Å–∫ API —Å–µ—Ä–≤–µ—Ä–∞"""
        print("üöÄ –ó–∞–ø—É—Å–∫ API —Å–µ—Ä–≤–µ—Ä–∞...")
        
        try:
            # –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –∏ –∑–∞–ø—É—Å–∫–∞–µ–º API
            if sys.platform.startswith('win'):
                # Windows
                activate_script = "venv\\Scripts\\activate.bat"
                cmd = f"{activate_script} && python run_api.py"
            else:
                # Linux/macOS
                python_path = os.path.join("venv", "bin", "python")
                cmd = [python_path, "run_api.py"]
            
            self.api_process = subprocess.Popen(
                cmd,
                shell=sys.platform.startswith('win'),
                stdout=subprocess.PIPE,
                stderr=subprocess.PIPE
            )
            
            print("‚úÖ API —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ")
            return True
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ API —Å–µ—Ä–≤–µ—Ä–∞: {e}")
            return False
    
    def open_web_interface(self):
        """–û—Ç–∫—Ä—ã—Ç–∏–µ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""
        print("üåê –û—Ç–∫—Ä—ã—Ç–∏–µ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞...")
        
        if not self.web_file.exists():
            print(f"‚ùå –§–∞–π–ª –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω: {self.web_file}")
            return False
        
        try:
            # –û—Ç–∫—Ä—ã–≤–∞–µ–º –≤ –±—Ä–∞—É–∑–µ—Ä–µ
            webbrowser.open(f"file://{self.web_file.absolute()}")
            print("‚úÖ –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –æ—Ç–∫—Ä—ã—Ç –≤ –±—Ä–∞—É–∑–µ—Ä–µ")
            return True
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è –±—Ä–∞—É–∑–µ—Ä–∞: {e}")
            print(f"üí° –û—Ç–∫—Ä–æ–π—Ç–µ —Ñ–∞–π–ª –≤—Ä—É—á–Ω—É—é: {self.web_file.absolute()}")
            return False
    
    def show_status(self):
        """–ü–æ–∫–∞–∑ —Å—Ç–∞—Ç—É—Å–∞ —Å–∏—Å—Ç–µ–º—ã"""
        print("\n" + "="*60)
        print("üéâ MESSAGE TREAKER –ó–ê–ü–£–©–ï–ù!")
        print("="*60)
        print("üì± –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: –û—Ç–∫—Ä—ã—Ç –≤ –±—Ä–∞—É–∑–µ—Ä–µ")
        print("üîó API —Å–µ—Ä–≤–µ—Ä: http://127.0.0.1:8000")
        print("üìä API —Å—Ç–∞—Ç—É—Å: http://127.0.0.1:8000/health")
        print("üìã –ü—Ä–∞–≤–∏–ª–∞: http://127.0.0.1:8000/rules")
        print("üîî –ò—Å—Ç–æ—Ä–∏—è: http://127.0.0.1:8000/hits")
        print("\nüí° –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
        print("1. –í –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ –¥–æ–±–∞–≤—å—Ç–µ –ø—Ä–∞–≤–∏–ª–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞")
        print("2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ watcher: python3 run_watcher.py")
        print("3. –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram")
        print("\n‚ö†Ô∏è  –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")
        print("="*60)
    
    def cleanup(self):
        """–û—á–∏—Å—Ç–∫–∞ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏"""
        if self.api_process:
            print("\nüõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ API —Å–µ—Ä–≤–µ—Ä–∞...")
            self.api_process.terminate()
            try:
                self.api_process.wait(timeout=5)
                print("‚úÖ API —Å–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
            except subprocess.TimeoutExpired:
                self.api_process.kill()
                print("‚ö†Ô∏è  API —Å–µ—Ä–≤–µ—Ä –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    
    def run(self):
        """–û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –∑–∞–ø—É—Å–∫–∞"""
        try:
            print("üöÄ –ó–ê–ü–£–°–ö MESSAGE TREAKER")
            print("="*40)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
            if not self.check_dependencies():
                return False
            
            # –ó–∞–ø—É—Å–∫–∞–µ–º API —Å–µ—Ä–≤–µ—Ä
            if not self.start_api_server():
                return False
            
            # –ñ–¥–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ API
            if not self.wait_for_api():
                return False
            
            # –û—Ç–∫—Ä—ã–≤–∞–µ–º –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
            if not self.open_web_interface():
                print("‚ö†Ô∏è  –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –Ω–µ –æ—Ç–∫—Ä—ã–ª—Å—è, –Ω–æ API —Ä–∞–±–æ—Ç–∞–µ—Ç")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å
            self.show_status()
            
            # –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
            try:
                while True:
                    time.sleep(1)
            except KeyboardInterrupt:
                print("\nüëã –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã...")
                
        except Exception as e:
            print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
            return False
        finally:
            self.cleanup()
        
        return True

def main():
    """–¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞"""
    launcher = MessageTreakerLauncher()
    success = launcher.run()
    
    if not success:
        print("\n‚ùå –ó–∞–ø—É—Å–∫ –Ω–µ —É–¥–∞–ª—Å—è. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ—à–∏–±–∫–∏ –≤—ã—à–µ.")
        sys.exit(1)
    else:
        print("\n‚úÖ Message Treaker –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ")

if __name__ == "__main__":
    main()

